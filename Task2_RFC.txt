Group Assignment Work                                         
Category: Informational                                        
                                                          
                                                        Group Submission
                                                               May 2020


                            Uplink To Mars (Latency)

Abstract

   In this group work, we take a look at the challenges faced by space 
   communication. More and more exploration of the Mars means better 
   forms for communication like, the transfer of packets from Earth to 
   Mars. Different factor affects the smooth packet transfer such as time, 
   distance and Sun. Due to distance from Earth to Mars, some packets are 
   damaged, and these damaged packets requires retransmission. The retransmission 
   is addressed in a way that, it should take less time to be retransmitted. 

Status of this Memo

   This document is a group exam assignment meant for educational purposes.
   It represents the consensus of the group.
   
Copyright Notice

   Copyright (c) 2020 Group authors.  All rights reserved.

   





                              Exam Assignment                  [Page 1]

                             Uplink to Mars                    May 2020


Table of Contents

   1. Introduction ...................................................3
   2. Challenges .....................................................4
      2.1. Vast Distance .............................................4
      2.2. Noise from Sun ............................................4
      2.3. Long Time delays ..........................................4
   3. Proposed Solutions .............................................5
      3.1. Forward Error Correction ..................................5
      3.2. Relay Station .............................................6
   4. References .....................................................7
      






Group Assignment             Informational                     [Page 2]

                             Uplink To Mars                     May 2020


   
1.  Introduction

   The constant growth in technology gives the ability for extreme discoveries 
   and explorations. One of this very ambitious exploration, is the settling of 
   humans in Mars in the nearest future. Before now, lots of different space 
   expeditions have been carried out, and this therefore means the explorers have 
   to communicate with people on Earth. Space communication has been a very big 
   challenge when it comes to transfer of data, based on vary factors, for example 
   distance.
   
   The distance from Earth to Mars is very vast and the time taken from Earth to Mars 
   differs. Both the Earth and Mars do orbit the Sun which also makes it challenging 
   for communication due to noise produced by the Sun. The transfer of packets from 
   Earth to Mars can sometimes fail and retransmission is needed. The idea of 
   retransmission can also leads to time constraint causing human-to-human activities 
   greatly unbearable. It is for this reason; attempting a proposed solution is highly 
   required.
   
   In this group work, an attempted solution is advanced to address the problem of damaged 
   packets during transfer from Earth to Mars (Uplink to Mars) with focus on latency. Some 
   of the attempted areas  we looked at are, forward error correction (FEC), and also the 
   use of relay stations to assist in smooth transmissions.

2.Challenges 

Setting up a communication between Earth and Mars is not really a trivial 
matter because of the wide varieties of obstacles such as vast distance 
between Earth and Mars, noise from the Sun, long time delays and other 
disturbances. However, mainly our concerns are the vast distance from Eath to 
Mars, noise from the Sun and long time delays.

2.1 Vast Distance

In communication systems, distance plays a vital role, when signal traveling 
through space become a bit tricky.The distance from earth to mars is 140 million 
miles (225 million kilometers) according to NASA, though the distance is changing 
frequently [1]. Hence, the signal needs to travel approximately aforementioned 
distance to reach in Mars.We know the speed of light is 3x10  km/sec. Assuming 
the signal traveling with the same speed of light. Communication between Earth 
and Mars goes through satellite because of the distance between the is also a 
substantial delay. Therefore, it takes approximately between 3 and 22 minutes 
for reaching information from one end to another. Another issue is variable 
distance between Earth and Mars which varies from 50 -400 million kilometers 
might affected on transmitted signals [2].

2.2 Noise from Sun
Deep space communication blatantly affected by the sun as it a kind noise source. 
Sun is known as the primary source of solar noise. The radiates wide range of signal
frequency we use for communication the sun radiates noise which vary with time. 
Usually sun cycles repeat after 11 years in the orbit during the peak of the cycle 
there occurs a strong interference with transmitted signal [3].

2.3 Long time delay
Long delay is due to the long the distance involved and navigating around the sun as
we cannot transmit directly through the sun, we have to go around.
The long delay time is also be of damaged packets and retransmission required.
Due to electromagnetic radiation, it is not like normal communication as we communicate by cellular network. 

3. Proposed Solutions
Theoretical
The existing Internet on earth is based on TCP/IP protocol suite and assures end to end connectivity,
provided that the latencies are relatively small, the connectivity is continuous and
the bidirectional data rates are high. However, in many networks such as the interplanetary
communications this is not the case; propagation delay can reach up to minutes
or even hours, the data rates are asymmetric and relatively low
and there is an intermittent connectivity.

Our solution has to involve a combination of position and functionality of relay station(s) plus the functioning of error correction. Propagation time from Mars to Earth is anywhere from 3 to 30 minutes. That is, assuming no error correction and everything fine = 30min. If we add 50% overhead to the data, then in theory it would take 50% longer to send, because we are increasing the amount of data to send by 50%, which means we would increase the time to send to 45min. But then the question is, by adding a mere 50% overhead, is that enough to account for data loss. So with 50% overhead, does that mean that we can lose up to 50% of the original data? i.e. how much of this can we lose and still be able to piece back together the original message.

3.1 Forward Error Correction
Typical in wireless applications or when satellites are used for transmission,
error detection alone is not enough. When errors are detected, using a checksum
or cyclic redundancy check necessitates the retransmission of the damaged data.
The problem is latency based on retransmission. The assumption is that 30 minutes
assumes no retransmission, that the data arrives intact, which is highly unlikely.
Thus 75min includes retransmission.  When data retransmission is costly
and transmission errors are common, a more efficient scheme is Forward Error Correction (FEC). 

If we do some calculations, 75 / 30 = 2.5 (retransmission rate of 150%).
That means we need to retransmit 1.5 times the amount of data.
This means that for every MB of data that we want to send we have to send 2.5MB of data.
Thus, with 150% it takes us five times to send two things.
In other words, at the moment for every 2MB of data we need to send 5MB of data.
Reducing 75 to 45 means retransmission rate of 50%.

With 50% it takes us three attempts to send one thing.
For every 2MB of data we need to send 3MB of data. And that's what we want. 
By this we are reducing the number of retransmissions, and thus reducing latency.

So Forward Error Correction involves transmitting extra data so that certain errors
can be corrected without data being retransmitted. This approach depends on a measure
called Hamming Distance. Hamming distance is a metric for comparing two bit strings
of the same length. For example consider the following two bit strings 000 and 011.
The Hamming distance between these two is two strings of equal length is simply
the number of positions in which their values differ. So the first are both 0s,
but then we have a 0 and a 1, so that is one position where they differ.
And the last position they also differ. So the distance between these two bit strings: d(000, 011)=2.
Given this knowledge, we can talk about forward error correction.

Forward error correction requires the creation of an error correcting code.
Specifically, both the sender and the receiver will have a dictionary of code words.
For example, the dictionary maps each possible two bit sequence to a 5 bit code word.
So, note that there are many bit strings of length 5 that are not code words.
This will allow us to detect errors. Let’s encode the following sequence.
This sequence of bits 01 00 01 11 11 10 00 10 is what the sender wants to send.
It will use this dictionary to transform each 2 bit sequence into a 5 bit code word.
Now this longer bit string is what will actually be transmitted.
So we see that the length of the code words incurs a cost
in terms of the number of bits that need to be sent.
But by sending these extra bits, we buy the ability to correct certain errors
without needing to retransmit anything.
Here's how this works. Let’s say that of each of these code words that we send,
some are received okay, but some are garbled. For example, perhaps the first one (01) is received
exactly as it was sent (11100) but this next one (00) will be garbled slightly
and instead of receiving (00000) what is received is (10000).
The rest in the transmission will be a mixture of garbled and correctly received code words.
The receiver has no knowledge about where errors occurred. It only knows that it has received these bits.
However the receiver also has this same dictionary. So it will try to decode each codeword
into its corresponding two bit sequence. If the codeword that it reads is in the dictionary
then this mapping process goes very smoothly. However, if there is an invalid code word,
or arguably not a code word, it’s not in our dictionary, we take this sequence of 5 bits (10000)
and compare it to each of the valid code words to get an idea of which one it is most
likely to have been. We will do this using Hamming distance. So the Hamming distance
between this bit string (10000) and the first code word (0000) is 1,
because there is only 1 bit different between the code word and this actual bit string.
The distance between this string and the next code word may be 2, etc.
So these are the Hamming distances between these code words and this invalid code word.
Having multiple bit errors is less likely than having fewer bit errors.
Thus whichever of the code words is the closest to the invalid code word in terms of
Hamming distance is the one that we will view as most likely.
So we will interpret this (10000) as having been a sequence of (00000)
which using our dictionary decodes to 00. And we know that that is what the sender initially sent,
so every thing worked out fine in this case.


3.2. Relay Station
In normal internet, sending a file (an image, for example) from one computer
to another using the Internet's File Transfer Protocol (FTP) involves establishing
a connection between the source and destination machines, and then passing the file across in chunks.
But if a rover on the Martian surface wants to send a file back to earth,
this is an inefficient way of doing it. It would make more sense for the rover to hand
the whole file over to a lander, which could pass it in chunks to orbiting relay satellites for transmission home.

Store and forward is a telecommunications technique in which information is sent to an intermediate station
where it is kept and sent at a later time to the final destination or to another intermediate station.
The intermediate station verifies the integrity of the message before forwarding it.

To address packet damage = packet loss, introduce relay stations (put a bunch of relay stations).
If we increase the number of hops then we decrease the data loss. If we have relay stations closer to each other then less loss. But determine, too, how much delay does a relay station introduce.

In general, this technique is used in networks with intermittent connectivity,
especially in the wilderness or environments requiring high mobility.
It may also be preferable in situations when there are long delays in transmission
and variable and high error rates, or if a direct, end-to-end connection is not available.

The relay station/router needs to be a custom solution that works for the application, because typically it will be end-end. Error correction and handling happens at the TCP level, not IP. Normally a router just operates at IP and the two hosts (client-server) take care of the TCP stuff.
Generally a router will have no idea if your file is corrupted or not.

And we don’t really need a router because it’s end-to-end transmission. The purpose is to retransmit the signal. So we can have a repeater. The repeater just forwards a ‘boosted’ version of it. So we can have all repeaters, but there is no checking along the way that data is ok. Whereas if we had all relay stations we can be sure that the data is intact, but with delay. Or we could consider a combination of relay stations and repeaters.

If there is no significant delay just have all relay stations. Cost is no issue here since we are launching satellites into space (which is already expensive, so who cares about cost difference between repeater or relay station. Latency is our main goal.

What is the furthest can communicate from earth to satellite orbiting the earth
and satellite into space, how far can that go reliably before you need a relay station?

401 mil km / distance can transmit without signifcant data loss will give us the number of satellites we need.
For example, a relay station every 75m km (5 relay stations in total);  (401 / 75 = 5) (5 satelites and 6 hops)

Best case scenario earth-relay, or relay-relay = 3min.
With 6 hops worst case scenario earth-relay, or relay-relay = 45min.


4. References
[1] https://www.google.com/search?sxsrf=ALeKk03bWk-dunvlrpSno3xMhDHZJBOkew%3A1589393034984&ei=ija8XqvQO4yVmwXcspuQAw&q=distance+from+earth+to+mars+in+miles&oq=distance+from+earth+to+mars+in+miles+&gs_lcp=CgZwc3ktYWIQARgBMgQIIxAnMgYIABAWEB4yBggAEBYQHjIGCAAQFhAeMgYIABAWEB4yBggAEBYQHjIGCAAQFhAeMgYIABAWEB4yBggAEBYQHjoECAAQRzoFCAAQywFQ-PMFWM-EBmDWngZoAXABeACAAYwBiAHQA5IBAzAuNJgBAKABAaoBB2d3cy13aXo&sclient=psy-ab
[2] https://www.forbes.com/sites/ellistalton/2018/09/06/communications-infrastructure-on-mars-could-be-the-envy-of-earth/#54affe3f3706
[3] https://books.google.fi/books?id=PNEGt99uMBwC&pg=RA4-PA2&lpg=RA4-PA2&dq=is+sun+noise+source&source=bl&ots=-WLSeek2hW&sig=ACfU3U1XF0mXsLfKh2saHgGveRAB3I4FdQ&hl=sv&sa=X&ved=2ahUKEwj3i6iyzLHpAhVNw4sKHRnRD1sQ6AEwEnoECAwQAQ#v=onepage&q=is%20sun%20noise%20source&f=false
[4] https://www.economist.com/science-and-technology/1999/11/11/the-wire-of-the-worlds
[5] https://en.wikipedia.org/wiki/Store_and_forward

